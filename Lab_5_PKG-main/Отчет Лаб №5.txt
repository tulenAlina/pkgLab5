                              Отчет по "Лабораторной №5"

Цель данной лабораторной заключалась в закреплении теоретического материала и практическое освоение основных алгоритмов отсечения отрезков и многоугольников.

Основной задачей которой являлась: 

   Написать приложение/веб-приложение, которое иллюстрирует работу алгоритмов отсечения отрезков и многоугольников.

  
Использованными средствами разработки моей лабораторной работы являлись: фреймворк Qt и язык С++.

В ходе моей лабораторной работы были произведены следующие работы:

  1. Проектировка приложение с удобным пользовательским интерфейсом.
  2. Выведение на экран систему координат.
  3. Выполнение отсечения отрезков алгоритмом Сазерленда-Коэна.
  4. Реализация отсечения выпуклого многоугольника.
  5. Визуализация видимых частей отрезков (многоугольников).
  6. Отображение отсекающего окна зеленым цветом, исходные отрезки (многоугольники) – красным цветом.

Описание алгоритма Сазерленда-Коэна:

Алгоритм Сазерленда-Коэна является одним из методов отсечения отрезков в компьютерной графике. Он используется для определения видимости отрезка внутри прямоугольного окна (области отсечения). Алгоритм основан на кодировании концевых точек отрезка в соответствии с их положением относительно окна. Вот основные шаги алгоритма:
1) Задается прямоугольное окно (область отсечения) с границами, определяющими видимую область на экране.
2) Каждая концевая точка отрезка кодируется с помощью четырехразрядного кода, который определяет ее положение относительно границ окна. Кодирование происходит следующим образом:
    -Левая граница окна: Если x-координата точки меньше левой границы окна, устанавливается самый левый бит кода равным 1, иначе 0.
    -Правая граница окна: Если x-координата точки больше правой границы окна, устанавливается второй слева бит кода равным 1, иначе 0.
    -Нижняя граница окна: Если y-координата точки меньше нижней границы окна, устанавливается третий слева бит кода равным 1, иначе 0.
    -Верхняя граница окна: Если y-координата точки больше верхней границы окна, устанавливается четвертый слева бит кода равным 1, иначе 0.
3) Если оба кода концевых точек отрезка равны 0000, то отрезок полностью видим внутри окна и не требует отсечения. Он может быть отрисован полностью.
4) Если логичесное "И" кодов концевых точек отрезка равно 0000, то отрезок полностью находится за пределами одной из границ окна и полностью отсекается. Он не отображается на экране.
5) В противном случае, если логичесное "И" кодов концевых точек отрезка не равно 0000, отрезок пересекает как минимум одну границу окна. В этом случае выполняется процедура отсечения для определения видимой части отрезка.
6) Процедура отсечения включает вычисление пересечений отрезка с каждой границей окна и обновление кодов концевых точек отрезка в соответствии с результатами пересечений. Если отрезок полностью отсекается, то он не отображается. В противном случае отображается только видимая часть отрезка.

Сложности, которые могут возникнуть в процессе выполнения алгоритма Сазерленда-Коэна, включают:

- Необходимость правильного определения границ окна: Неправильно определенные границы окна могут привести к неправильному отсечению отрезков или невидимости некоторых частей отрезков.
- Вычислительная сложность: Алгоритм Сазерленда-Коэна требует вычисления пересечений отрезка с каждой границей окна. Это может быть вычислительно сложной операцией, особенноесли взаимодействуют множество отрезков или окно имеет сложную форму.
- Обработка вырожденных случаев: Алгоритм может столкнуться с вырожденными случаями, например, когда отрезок полностью лежит за пределами окна или перекрывает все границы окна. В таких случаях необходимо обрабатывать эти особых случаи, чтобы избежать ошибок или неправильных результатов.
- Неэффективность при большом количестве отрезков: Если имеется большое количество отрезков для отсечения, алгоритм Сазерленда-Коэна может стать неэффективным, так как требует вычисления пересечений для каждого отрезка отдельно. В таких случаях могут применяться более оптимизированные алгоритмы отсечения, например, алгоритм Кируса-Бека.

Вывод:
 
  В ходе выполнения данной лабораторной:
  
  1. Было создано приложение в котором визуализируется работа алгоритмов отсечения отрезков и многоугольников.
  2. Был получен опыт работы с сеткой, осями координат и масштабом (который видоизменяется в зависимости от наших потребностей) в Qt.
  3. Был получен навык реализации основных алгоритмов отсечения отрезков и многоугольников.
  4. Закрепили работу с файловыми системами.
  5. Научились считывать  информации с файла.
  6. Закрепили навык работы с GitHub.
